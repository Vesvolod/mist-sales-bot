import express from 'express';
import dotenv from 'dotenv';
import { analyzeMessage } from './utils/analyze.js';
import axios from 'axios';

dotenv.config();
const app = express();
app.use(express.json());

app.post('/webhook', async (req, res) => {
  try {
    const data = req.body;

    console.log('üì• –ü–æ–ª—É—á–µ–Ω Webhook –æ—Ç Kommo:\n', JSON.stringify(data, null, 2));

    const message = data.message?.text || '';
    const direction = data.message?.direction || '';
    const entityId = data.message?.entity_id;
    const entityType = data.message?.entity_type;

    console.log(`‚û°Ô∏è direction: ${direction}`);
    console.log(`üßæ entity_type: ${entityType}`);
    console.log(`üìå entity_id: ${entityId}`);
    console.log(`üí¨ message: ${message}`);

    if (!message || !entityId || !entityType || direction !== 'in') {
      console.log('‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: –ª–∏–±–æ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞, –ª–∏–±–æ –Ω–µ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
      return res.status(200).send('Ignored');
    }

    // –§–∏–ª—å—Ç—Ä —Å–ª—É–∂–µ–±–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    const technical = ['moved to', 'field value', 'invoice', 'robot', 'delivered'];
    const isTechnical = technical.some(t => message.toLowerCase().includes(t));

    if (isTechnical) {
      console.log('üîÅ –ü—Ä–æ–ø—É—â–µ–Ω–æ: —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
      return res.status(200).send('Technical message ignored');
    }

    console.log('üß† –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–Ω–∞–ª–∏–∑ –≤ Mist AI...');
    const result = await analyzeMessage(message);

    console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç Mist AI:\n', JSON.stringify(result, null, 2));

    const noteText = `
ü§ñ *AI-–∞–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏:*
‚Ä¢ üåê –Ø–∑—ã–∫: ${result.language}
‚Ä¢ üß© –ö–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: ${Array.isArray(result.keywords) ? result.keywords.join(', ') : '-'}
‚Ä¢ üìä –ê–Ω–∞–ª–∏–∑: ${result.analysis}
‚Ä¢ üí¨ –û—Ç–≤–µ—Ç: ${result.reply}
‚Ä¢ üìà –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${result.sales_recommendation}
    `.trim();

    const url = `https://${process.env.KOMMO_DOMAIN}/api/v4/${entityType}s/${entityId}/notes`;

    console.log(`üìù –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ Kommo: ${url}`);

    await axios.post(url, [
      {
        note_type: "common",
        params: { text: noteText }
      }
    ], {
      headers: {
        Authorization: process.env.KOMMO_TOKEN,
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–¥–µ–ª–∫—É!');
    res.sendStatus(200);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ Webhook:', err.message);
    res.sendStatus(500);
  }
});

